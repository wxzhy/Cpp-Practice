/* 竞赛总分(inflate)
描述
学生在我们 USACO 的竞赛中的得分越多我们越高兴。我们试着设计我们的竞赛以便人们 能尽可能多得分。 现在要进行一次竞赛，总时间 T 固定，有若干类型可选择的题目，每种类型题目可选入 的数量不限，每种类型题目有一个 si（解答此题所得的分数）和 ti（解答此题所需的时间）， 现要选择若干题目，使解这些题的总时间在 T 以内的前提下，所得的总分最大。 输入包括竞赛的时间 M(1 <= M <= 10000)和题目类型数目 N(1 <= N <= 10000)。 后面的每一行将包括两个整数来描述一种"题型": 第一个整数说明解决这种题目能得的分数(1 <= points <= 10000),第二整数说明解决 这种题目所需的时间(1 <= minutes <= 10000)。
输入
第 1 行: 两个整数：竞赛的时间 M 和题目类型数目 N。
第 2-N+1 行: 两个整数：每种类型题目的分数和耗时。
输出
单独的一行，在给定固定时间里得到的最大的分数。 */
#include<iostream>
using namespace std;
int m, n;
int f[2][10001];
int s[10001], t[10001];
int &F(int x, int y) {
	return f[x % 2][y];
}
int main() {
	cin >> m >> n;
	for (int i = 1; i <= n; ++i)
		cin >> s[i] >> t[i];
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= m; ++j) {
			if (j < t[i])
				F(i, j) = F(i - 1, j);
			else
				F(i, j) = max(F(i - 1, j), F(i, j - t[i]) + s[i]);
		}
	cout << F(n, m);
	return 0;
}
