/* 开心的金明(happy）
描述
金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的 房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说 了算，只要不超过 N 元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了， 肯定会超过妈妈限定的 N 元。于是，他把每件物品规定了一个重要度，分为 5 等：用整数 1~5 表示，第 5 等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望 在不超过 N 元（可以等于 N 元）的前提下，使每件物品的价格与重要度的乘积的总和最大。 设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为j1，j2，……， jk，则所求的总和为： v[j1]*w[j1]+v[j2]*w[j2]+ …+v[jk]*w[jk]。（其中*为乘号）请你帮助金明设计一个满足要求的购物单。
输入
输入文件 happy.in 的第 1 行，为两个正整数，用一个空格隔开： N  m （其中 N（<30000）表示总钱数，m（<25）为希望购买物品的个数。） 从第 2 行到第 m+1 行，第 j 行给出了编号为 j-1 的物品的基本数据，每行有 2 个非负整数。
v  p （其中 v 表示该物品的价格(v<=10000)，p 表示该物品的重要度(1~5)）
输出
输出文件 happy.out 只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的 总和的最大值（<100000000）。 */
#include<iostream>
#include <vector>
using namespace std;
int main() {
	int n, m, w[25] = {0}, v[25] = {0};
	vector<vector<int>> f(25, vector<int>(30001, 0));
	cin >> n >> m;
	for (int i = 1; i <= m; ++i)
		cin >> v[i] >> w[i];
	for (int i = 1; i <= m; ++i)
		for (int j = 1; j <= n; ++j)
			if (j < v[i])
				f[i][j]=f[i-1][j];
			else
				f[i][j] =max(f[i-1][j],f[i-1][j-v[i]]+v[i]*w[i]);
	cout << f[m][n];
	return 0;
}
